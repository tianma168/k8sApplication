# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
       - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: |
          echo version=${{ github.sha }} >>src/main/resources/hellospring.properties
          echo createTime=`date +%Y%m%d_%H%M` >>src/main/resources/hellospring.properties
          mvn -B package --file pom.xml
          cp target/k8sApplication.jar disk/k8sApplication.jar
    - name: Docker Login
      uses: docker/login-action@v1.6.0
      with:
        registry: registry.cn-shanghai.aliyuncs.com
        username: ${{ secrets.aliyun_username }}
        password: ${{ secrets.aliyun_pwd }}
    - name: Docker build&push
      run: |
        docker build . -t registry.cn-shanghai.aliyuncs.com/ar_ck6/k8sapp6:${{ github.sha }}
        docker push registry.cn-shanghai.aliyuncs.com/ar_ck6/k8sapp6:${{ github.sha }}
        docker images
        cat kubernetes/podDeploy.yaml | sed -e "s/\${version}/${{ github.sha }}/" > kubernetes/tmp.yaml
    - name: deploy to prod env
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args:
         apply -f kubernetes/namespace/prodNamespace.yaml
    - name: deploy pod for kubectl
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args:
         apply -f kubernetes/tmp.yaml
    - name: deploy service for kubectl
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: apply -f kubernetes/serviceDeploy.yaml
    - name: deploy ingress for kubectl
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: apply -f kubernetes/ingressDeploy.yaml
